import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()
import type client from '../index'
import type { CommandInteraction } from "discord.js"

export = {
    data: {
        name: "auto-delete",
        description: "Schedule auto-delete messages on your channel.",
        description_localizations: {
            'th': '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì +- 1min'
        },
        options: [
            {
                name: "setup",
                description: "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà",
                type: 3,
                required: true,
                choices: [
                    {
                        name: "yes",
                        value: "yes"
                    },
                    {
                        name: "cancel",
                        value: "cancel"
                    }
                ]
            },
            {
                name: "count-down",
                description: "‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏•‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏Å‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ?/Sec",
                type: 10,
            }
        ]
    },
    async execute(client: client, interaction: CommandInteraction) {
        //‡πÄ‡∏ä‡πá‡∏Ñ Role Admin
        if (!interaction.memberPermissions?.has('Administrator')) return interaction.reply({ 
            embeds: [
                {
                    color: 0xE6ED20,
                    title: `***Error***`,
                    description: `‚ö†Ô∏è ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ ‚ö†Ô∏è`
                }
            ]
        });


        const _setup = interaction.options.get('setup')?.value //‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á args
        const deleteTimeSec = interaction.options.get('count-down')?.value as number || 0;

        if (_setup != "yes") {
            try {
                await prisma.autoDeleteMsg.delete({
                    where: {
                        channelId: interaction.channelId
                    },
                })
            } catch {
                return interaction.reply(
                    {
                        embeds: [
                            {
                                color: 0xB6B6B6,
                                title: `‚≠ïÔ∏è ***Connection Error***`,
                                description: `**Database** isn't response please try again later`
                            }
                        ]
                    }
                )
            }
            await interaction.reply({
                embeds: [
                    {
                        color: 0xE51F33,
                        description: `üü• **Cancle AutoDeleteMsg** ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏≠‡∏î‡∏µ: **${interaction.channelId}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞`
                    }
                ]
            })
            return;
        }

        if (deleteTimeSec < 10) return interaction.reply(
            {
                embeds: [
                    {
                        color: 0xB6B6B6,
                        title: `‚ö†Ô∏è **Error** ‚ö†Ô∏è`,
                        description: `‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏•‡∏ö‡πÑ‡∏î‡πâ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏Ñ‡∏∑‡∏≠ 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞`
                    }
                ],
                ephemeral: true
            }
        );
        

        // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô db
        try{
            await prisma.autoDeleteMsg.upsert({
                update: {
                    guildId: interaction.guildId,
                    guildName: interaction.guild?.name,
                    channelId: interaction.channelId,
                    deleteLimit: deleteTimeSec,
                },
                where: {
                    channelId: interaction.channelId
                },
                create: {
                    guildId: interaction.guildId,
                    guildName: interaction.guild?.name,
                    channelId: interaction.channelId,
                    deleteLimit: deleteTimeSec,
                }
            })
        } catch {
            return interaction.reply(
                {
                    embeds: [
                        {
                            color: 0xB6B6B6,
                            title: `‚≠ïÔ∏è ***Connection Error***`,
                            description: `**Database** isn't response please try again later`
                        }
                    ]
                }
            )
        }

        await interaction.reply({
            embeds: [
                {
                    color: 0x0099ff,
                    description: `üü¶ **Setup AutoDeleteMsg** ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏≠‡∏î‡∏µ: **${interaction.channelId}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞`
                }
            ]
        })
    }
};