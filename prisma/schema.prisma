// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model guild {
  id Int @id @default(autoincrement())
  log_id String?
  welcome_log_id String?
  animeGirlDaily_log_id String?

  guild_id String? @unique
  inout Boolean @default(false)
  welcomeMsg Boolean @default(false)
  privilege Boolean @default(false)
  animeGirlDaily Boolean @default(false)
  create_time DateTime @default(now())
}

model user {
  id Int @id @default(autoincrement())
  userId String?
  userName String?
  userTag String?
  guildId String?
  guildName String?
  guildMsgCount Int?
}

model voiceChatClone {
  id Int @id @default(autoincrement())
  create_Vstate_id String?
  new_create_Vstate_id String? @unique
  create_time DateTime @default(now())
}

model translateChannel {
  id Int @id @default(autoincrement())
  guild String?
  mainChannel String?
  targetChannel String? @unique
  mainLanguage String?
  targetLanguage String?
  create_time DateTime @default(now())
}

model userPayments {
  id Int @id @default(autoincrement())
  guild String?
  userId String? @unique
  userName String?
  userTag String?
  promptpay String?
  create_time DateTime @default(now())
}

model debtorCheck {
  id Int @id @default(autoincrement())
  guild String?
  creditorUserId String?
  creditorUserName String?
  creditorUserTag String?
  debtorUserId String?
  debtorUserName String?
  debtorUserTag String?
  debtorAmount Float?
  create_time DateTime @default(now())
}

model deleteMessage {
  id Int @id @default(autoincrement())
  guildId String?
  channelId String?
  messageId String? @unique
  messageContent String?
  messageAuthorId String?
  messageAuthorName String?
  create_time DateTime @default(now())
}

model attachment {
  id Int @id @default(autoincrement())
  animeGirlImage String? @unique @db.VarChar(255)
  animeGirlImage_Verify Boolean? @default(false)
  sendVerify_id String?
  animeGirlImage_Check Boolean? @default(false)
  create_time DateTime @default(now())
  send_time DateTime?
}

model autoDeleteMsg {
  id Int @id @default(autoincrement())
  guildId String?
  guildName String?
  channelId String? @unique
  deleteLimit Int?
  create_time DateTime @default(now())
}